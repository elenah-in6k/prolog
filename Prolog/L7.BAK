domains
      list = real*
      namelist=name*
      name=symbol
predicates
    string_namelist(string,namelist)
	input(string)
	output(string, real)
	output(string, namelist)
	prog(string,char)
	find_n(list,real,real,real)
	add(symbol)
	subtract(symbol)
	multiply(symbol)
	divide(symbol)

clauses
	input(X):-
		write("String function = "),
		readln(X).
		
	add(X):- X = '+'.
	subtract(X): X = '-'.
	multiply(X):- X = '*'.
	divide(X):- X = '/'.
	
	find_n([],_,0,_):-!.
	find_n([_|T],N,K,F):- N<>K,K1=K+1,find_n(T,N,K1).
	find_n([H|_],_,_,F):- F=H,nl,!.
	
	output(Name, Value):- 
		write(Name," = ", Value),
		nl.
		
    prog(X,F):- str_char(X,F)
	.

	string_namelist(S,[H |T]):-
		fronttoken(S,H,S1),!, 
		string_namelist(S1,T).
	string_namelist(_, []).
goal
	clearwindow,
	X=[5,3,1,7],
	find_n(X,3,1,F),
	output("Result",F)
.